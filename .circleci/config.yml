# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#

defaults: &defaults
  working_directory: ~/lol_stats/server
  docker:
    - image: circleci/python:3.6.1-browsers

version: 2
jobs:
  build:
    <<: *defaults 

    # Specify service dependencies here if necessary
    # CircleCI maintains a library of pre-built images
    # documented at https://circleci.com/docs/2.0/circleci-images/
    # - image: circleci/postgres:9.4
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "requirements.txt" }}
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -U pip setuptools virtualenv
      - save_cache:
          key: dependency-cache-{{ checksum "requirements.txt" }}
          paths:
            - ./venv
          
 
    # run tests!
    # this example uses Django's built-in test-runner
    # other common Python testing frameworks include pytest and nose
    # https://pytest.org
    # https://nose.readthedocs.io
  test:
    <<: *defaults

    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "requirements.txt" }}
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python manage.py test
      - store_artifacts:
          path: test-reports
          destination: test-reports
      - save_cache:
          key: dependency-cache-{{ checksum "requirements.txt" }}
          paths:
            - ./venv
  errorMessage:
    <<: *defaults

    steps:
      - checkout
      - run:
          name: Notification of Build Failure
          command: ./bot.py "BUILD FAILED"
          when: on_fail
  successMessage:
    <<: *defaults

    steps:
      - checkout
      - run:
          name: Notification of Build Success
          command: ./bot.py "BUILD SUCCEEDED"
          when: on_success


workflows:
  version: 2
  btd:
    jobs:
      - build
      - test:
          requires:
            - build
      - errorMessage:
          requires:
            - build
            - test
      - successMessage:
          requires:
            - build
            - test
